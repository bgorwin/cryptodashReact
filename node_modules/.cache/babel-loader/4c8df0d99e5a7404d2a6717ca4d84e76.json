{"ast":null,"code":"var _jsxFileName = \"/Users/brentg/Desktop/cryptodashReact/src/App/AppBar.js\";\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { AppContext } from './AppProvider';\nconst Logo = styled.div`\n    font-size: 1.5em;\n`;\nconst Bar = styled.div`\n    display: grid;\n    margin-bottom: 40px;\n    grid-template-columns: 180px auto 100px 100px;\n`;\nconst ControlButtonElem = styled.div`\n    cursor: pointer;\n    ${props => props.active && css`\n        text-shadow: 0px 0px 50px #03ff03;\n    `}\n`;\n\nfunction toProperCase(lower) {\n  return lower.charAt(0).toUpperCase() + lower.substr(1);\n}\n\nfunction ControlButton({\n  name,\n  active\n}) {\n  return React.createElement(AppContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, ({\n    page\n  }) => React.createElement(ControlButtonElem, {\n    active: active,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, toProperCase(name)));\n}\n\nexport default function () {\n  return React.createElement(Bar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \" Cryptodash \"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(ControlButton, {\n    active: true,\n    name: \"dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(ControlButton, {\n    name: \"settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/brentg/Desktop/cryptodashReact/src/App/AppBar.js"],"names":["React","styled","css","AppContext","Logo","div","Bar","ControlButtonElem","props","active","toProperCase","lower","charAt","toUpperCase","substr","ControlButton","name","page"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;AACA,SAAQC,UAAR,QAAyB,eAAzB;AAEA,MAAMC,IAAI,GAAGH,MAAM,CAACI,GAAI;;CAAxB;AAIA,MAAMC,GAAG,GAAGL,MAAM,CAACI,GAAI;;;;CAAvB;AAMA,MAAME,iBAAiB,GAAGN,MAAM,CAACI,GAAI;;MAE/BG,KAAK,IAAIA,KAAK,CAACC,MAAN,IAAgBP,GAAI;;KAE7B;CAJN;;AAOA,SAASQ,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,SAAOA,KAAK,CAACC,MAAN,CAAa,CAAb,EAAgBC,WAAhB,KAAgCF,KAAK,CAACG,MAAN,CAAa,CAAb,CAAvC;AACH;;AAED,SAASC,aAAT,CAAuB;AAACC,EAAAA,IAAD;AAAOP,EAAAA;AAAP,CAAvB,EAAuC;AACnC,SACA,oBAAC,UAAD,CAAY,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC;AAACQ,IAAAA;AAAD,GAAD,KACD,oBAAC,iBAAD;AAAmB,IAAA,MAAM,EAAER,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,YAAY,CAACM,IAAD,CADjB,CAFJ,CADA;AASH;;AAED,eAAe,YAAW;AACtB,SAAQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADI,EAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFI,EAGJ,oBAAC,aAAD;AAAe,IAAA,MAAM,MAArB;AAAsB,IAAA,IAAI,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHI,EAIJ,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJI,CAAR;AAOH","sourcesContent":["import React from 'react';\nimport styled, {css} from 'styled-components';\nimport {AppContext} from './AppProvider';\n\nconst Logo = styled.div`\n    font-size: 1.5em;\n`\n\nconst Bar = styled.div`\n    display: grid;\n    margin-bottom: 40px;\n    grid-template-columns: 180px auto 100px 100px;\n`\n\nconst ControlButtonElem = styled.div`\n    cursor: pointer;\n    ${props => props.active && css`\n        text-shadow: 0px 0px 50px #03ff03;\n    `}\n`\n\nfunction toProperCase(lower) {\n    return lower.charAt(0).toUpperCase() + lower.substr(1);\n}\n\nfunction ControlButton({name, active}) {\n    return (\n    <AppContext.Consumer>\n        {({page}) => (\n        <ControlButtonElem active={active}>\n            {toProperCase(name)}\n        </ControlButtonElem>\n        )}\n    </AppContext.Consumer>\n    )\n}\n\nexport default function() {\n    return (<Bar> \n        <Logo> Cryptodash </Logo>\n        <div />\n        <ControlButton active name=\"dashboard\" />\n        <ControlButton name=\"settings\" />\n    </Bar>\n    )\n}"]},"metadata":{},"sourceType":"module"}